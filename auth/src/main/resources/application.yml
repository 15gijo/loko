spring:
  application:
    name: auth-service
  cloud:
    config:
      enabled: false #?? config server ????
  config:
    import: optional:file:./auth/.env[.properties] # ?? ?? env
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_SECRET_KEY}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - openid
              - email
              - profile

          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_SECRET_KEY}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email
              - nickname
              - profile_image

          kakao:
            client-id: ${KAKAO_REST_API_KEY}
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            client-name: Kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM}
    hibernate:
      ddl-auto: update
    show-sql: true

  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD}

server:
  port: 19092

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/  # Eureka ?? URL

jwt:
  secret:
    key: ${JWT_SECRET_KEY}
  access-token:
    expiration: ${ACCESS_TOKEN_EXPIRATION}
  refresh-token:
    expiration: ${REFRESH_TOKEN_EXPIRATION}
  oauth-signup-token:
    expiration: ${OAUTH_SIGNUP_TOKEN_EXPIRATION}


  admin:
    secret:
      key: ${JWT_ADMIN_SECRET_KEY}


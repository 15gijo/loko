spring:
  application:
    name: follow-service
  cloud:
    config:
      enabled: false #?? config server ????
  config:
    import: optional:file:./follow/.env[.properties] # ?? ?? env
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM}
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true

  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD}
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      group-id: follow-service-group
      properties:
        spring.json.trusted.packages: "*"
    template:
      observation-enabled: true
    listener:
      observation-enabled: true


server:
  port: 19094
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/  # Eureka ?? URL
    register-with-eureka: true   # ?????? Eureka? ?? ??? ??
    fetch-registry: true         # ?? ??? ??(Eureka ?????)? ???


management:
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  tracing:
    enabled: true
    sampling:
      probability: 1.0
  endpoints:
    web:
      exposure:
        include: [ "*" ]
  endpoint:
    health:
      show-details: always
    prometheus:
      access: unrestricted

logging:
  pattern:
    console: '%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} [%-0.32X{traceId:-},%-0.16X{spanId:-}] %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:-}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}'
    # ✅ 모든 콘솔 로그에 traceId, spanId 추가
server:
  port: 19102

spring:
  cloud:
    config:
      enabled: false
  config:
    import:
      - optional:file:./comment/.env[.properties]
  application:
    name: comment-service
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    database-platform: ${SPRING_JPA_DATABASE_PLATFORM}
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 0
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD}

comment:
  blacklist:
    - "바보"
    - "멍청이"
    - "쓰레기"
ai:
  service:
    url: http://localhost:19095

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/
    register-with-eureka: true   # 클라이언트가 Eureka에 자기 자신을 등록
    fetch-registry: true         # 다른 서비스 정보(Eureka 레지스트리)도 가져옴

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    prometheus:
      access: unrestricted

